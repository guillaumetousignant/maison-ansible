- name: Install Fan Controller packages
  hosts: fan_controller

  tasks:
  - name: Install a list of packages
    become: true
    ansible.builtin.apt:
      update_cache: yes
      pkg:
        - git
        - pigpiod
        - python3-pip
        - python3-virtualenv

- name: Download font
  hosts: fan_controller

  tasks:
  - name: Create fonts directory
    ansible.builtin.file:
      path: '/home/{{ ansible_user }}/Fonts'
      state: directory
  - name: Download and untar scientifica font
    ansible.builtin.unarchive:
      src: https://github.com/nerdypepper/scientifica/releases/download/v2.3/scientifica.tar
      dest: '/home/{{ ansible_user }}/Fonts'
      remote_src: yes

- name: Clone Fan Controller
  hosts: fan_controller

  tasks:
  - name: Clone Fan Controller repo
    ansible.builtin.git:
      repo: 'https://github.com/guillaumetousignant/fan_controller.git'
      dest: '/home/{{ ansible_user }}/Code/fan_controller'

- name: Install Fan Controller dependencies
  hosts: fan_controller

  tasks:
  - name: Install pip dependencies
    become: yes
    ansible.builtin.pip:
      requirements: '/home/{{ ansible_user }}/Code/fan_controller/requirements.txt'
      virtualenv: '/home/{{ ansible_user }}/Code/fan_controller/env'

- name: Configuration
  hosts: fan_controller

  tasks:
  - name: Configure pigpiod service
    become: yes
    ansible.builtin.lineinfile:
      path: /lib/systemd/system/pigpiod.service
      regexp: '^ExecStart=/usr/bin/pigpiod'
      line: 'ExecStart=/usr/bin/pigpiod -l -s 1'
  - name: Write password file
    ansible.builtin.copy:
      dest: '/home/{{ ansible_user }}/Code/fan_controller/.password'
      mode: '0600'
      content: |
        {{ message_broker_password }}
  - name: Create Fan Controller service
    ansible.builtin.copy:
      dest: '/home/{{ ansible_user }}/fan_controller.service'
      backup: yes
      content: |
        [Unit]
        Description=Fan Controller
        After=multi-user.target
        After=pigpiod.service
        [Service]
        Type=simple
        Restart=always
        RestartSec=2
        User={{ ansible_user }}
        ExecStart=/home/{{ ansible_user }}/Code/fan_controller/env/bin/python /home/{{ ansible_user }}/Code/fan_controller/fan_controller.py --min 10 --font /home/{{ ansible_user }}/Fonts/scientifica/ttf/scientifica.ttf --broker {{ message_broker_address }} --client-id {{ client_id }} --password-file /home/{{ ansible_user }}/Code/fan_controller/.password
        [Install]
        WantedBy=multi-user.target

- name: pigpio auto-start
  hosts: fan_controller

  tasks:
  - name: Enable pigpio daemon
    become: true
    ansible.builtin.systemd_service:
      name: pigpiod
      enabled: true
      masked: no
  - name: Start pigpio daemon
    become: true
    ansible.builtin.systemd_service:
      name: pigpiod
      state: started

- name: Fan Controller auto-start
  hosts: fan_controller

  tasks:
  - name: Symlink Fan Controller service
    become: true
    ansible.builtin.file:
      src: '/home/{{ ansible_user }}/fan_controller.service'
      dest: /lib/systemd/system/fan_controller.service
      state: link
  - name: Enable Fan Controller
    become: true
    ansible.builtin.systemd_service:
      name: fan_controller
      enabled: true
      masked: no
  - name: Start Fan Controller
    become: true
    ansible.builtin.systemd_service:
      name: fan_controller
      state: started  
